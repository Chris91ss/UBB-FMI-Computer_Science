@model IEnumerable<DocumentManager.Models.Document>

@{
    ViewData["Title"] = "Documents";
}

<h1>Documents</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<div class="row mb-3">
    <div class="col-md-6">
        <form asp-action="Index" method="get" class="form-inline">
            <div class="form-group mr-2">
                <label for="type" class="mr-2">Type:</label>
                <select name="type" id="type" class="form-control" asp-items="@(new SelectList(ViewBag.Types))">
                    <option value="">All Types</option>
                </select>
            </div>
            <div class="form-group mr-2">
                <label for="format" class="mr-2">Format:</label>
                <select name="format" id="format" class="form-control" asp-items="@(new SelectList(ViewBag.Formats))">
                    <option value="">All Formats</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
        </form>
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewBag.CurrentType) || !string.IsNullOrEmpty(ViewBag.CurrentFormat))
{
    <div class="alert alert-info">
        Current filters:
        @if (!string.IsNullOrEmpty(ViewBag.CurrentType))
        {
            <span class="badge bg-primary">Type: @ViewBag.CurrentType</span>
        }
        @if (!string.IsNullOrEmpty(ViewBag.CurrentFormat))
        {
            <span class="badge bg-primary">Format: @ViewBag.CurrentFormat</span>
        }
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Author)</th>
            <th>@Html.DisplayNameFor(model => model.NumberOfPages)</th>
            <th>@Html.DisplayNameFor(model => model.Type)</th>
            <th>@Html.DisplayNameFor(model => model.Format)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Author)</td>
                <td>@Html.DisplayFor(modelItem => item.NumberOfPages)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Format)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table> 