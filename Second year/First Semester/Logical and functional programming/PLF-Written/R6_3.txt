A non-linear list is given and it is requested to replace the even numerical values ​​with the succeeding natural number. A MAP function will be used. Example: for the list (1 s 4 (2 f (7))) will result (1 s 5 (3 f (7))).


(defun replace-even-values (lst)
  (cond
    ;; Base case: if the list is empty, return NIL
    ((null lst) nil)

    ;; If the current element is a list, apply the function recursively
    ((listp lst)
     (mapcar #'replace-even-values lst))

    ;; If the current element is an even number, replace it with the next number
    ((and (numberp lst) (evenp lst))
     (+ lst 1))

    ;; Otherwise, return the element as it is
    (t lst)))


; Flow model:
replace-even-values(i, o) – Takes an input list and outputs a modified list with even numbers replaced by their succeeding values.


; Mathematical model:

replace_even_values(L) =
    {
      NIL, if L is empty
      map(replace_even_values(sublist)), if L is a list
      L + 1, if L is a number and L is even
      L, otherwise
    }
